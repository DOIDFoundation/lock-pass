import{T as x,b as c,h as D}from"./index-6b0c52ca.js";import{b as f,y as s,f as d,h as $,e as w,d as y,n as l,E as j,k as I}from"./vendor-cf07880b.js";import{a as T,d as S,e as N,f as U,h as Y,i as z,j as B}from"./index-32fb24d1.js";const F="";var E=Object.defineProperty,M=Object.getOwnPropertyDescriptor,v=(t,i,a,n)=>{for(var e=n>1?void 0:n?M(i,a):i,o=t.length-1,r;o>=0;o--)(r=t[o])&&(e=(n?r(i,a,e):r(e))||e);return n&&e&&E(i,a,e),e};let m=class extends x(F){constructor(){super(...arguments),this.bindBridge=new f(this,c),this.name="",this.limit="0",this.inviteCode="",this.genInviteCode=async()=>{try{let t=await T();t&&(this.inviteCode=t)}catch(t){}}}get bridge(){return c.bridge}get inviteLink(){return`https://lockpass.doid.tech/?ic=${this.inviteCode}`}async connectedCallback(){super.connectedCallback(),this.limit=await S()}get shareText(){return`DOID lock name event is live. Mint your lock pass NFT for free and reserve your desired name now. Get invitation here: ${this.inviteLink}`}render(){return s`<p class="text-sm text-gray-500">You have <b>${this.limit}</b> invitations in total. Copy the invitation code or share the link.</p><div class="py-2">${this.inviteCode?s`<textarea class="block w-full h-24 my-3 border border-solid border-gray-200 py-2 px-2 text-gray-400" readonly="readonly">
${this.shareText}</textarea><dui-copy value="${this.shareText}" sm class="outlined"><span slot="copied">Copy<i class="ml-1 mdi mdi-check text-green-600"></i></span><span slot="copy">Copy<i class="ml-1 mdi mdi-content-copy"></i></span></dui-copy>`:+this.limit>0?s`<dui-button sm @click="${this.genInviteCode}">Share</dui-button>`:s``}</div>`}};v([$()],m.prototype,"name",2);v([d()],m.prototype,"limit",2);v([d()],m.prototype,"inviteCode",2);m=v([w("pass-share")],m);const R=`:host{--posterSize: 90px}.pass{position:relative;min-height:8.5rem;display:flex;gap:1rem;border-width:1px;--tw-border-opacity: 1;border-color:rgba(209,213,219,var(--tw-border-opacity));padding:1rem}.pass .poster{margin-bottom:1rem;width:var(--posterSize);height:var(--posterSize)}.pass .poster:not(.minted){--tw-bg-opacity: 1;background-color:rgba(243,244,246,var(--tw-bg-opacity))}.pass .name.locked{font-size:1rem;line-height:1.5rem}.pass .status.locked{--tw-text-opacity: 1;color:rgba(22,163,74,var(--tw-text-opacity))}.pass .status.unlock{--tw-text-opacity: 1;color:rgba(107,114,128,var(--tw-text-opacity))}.pass .status.minted{--tw-text-opacity: 1;color:rgba(96,165,250,var(--tw-text-opacity))}
`;var V=Object.defineProperty,A=Object.getOwnPropertyDescriptor,u=(t,i,a,n)=>{for(var e=n>1?void 0:n?A(i,a):i,o=t.length-1,r;o>=0;o--)(r=t[o])&&(e=(n?r(i,a,e):r(e))||e);return n&&e&&V(i,a,e),e};let p=class extends x(R){constructor(){super(...arguments),this.bindBridge=new f(this,c),this.item={},this.tx=null,this.success=!1,this.dialog=!1,this.doClaim=async()=>{try{this.tx=await N(this.item.id),this.success=await this.tx.wait()}catch(t){if(t.code===4001)return}}}get bridge(){return c.bridge}get scan(){return this.bridge.network.current.scan}get tokenLink(){return`${this.scan}/token/${D("Locker")}?a=${this.item.id}`}get txPending(){var t;return this.tx&&!((t=this.tx)!=null&&t.ignored)}close(t=!1){this.dialog=!1,this.tx=void 0,t&&this.emit("change")}claim(){this.dialog=!0}render(){let t="",i="";return this.item.name?(t="locked",i="Locked"):(t="unlock",i="No name locked yet"),s`<div class="pass ${y({})}"><div class="poster ${y({minted:this.item.meta.image,"opacity-40":this.dialog,grayscale:this.dialog})}"><img src="${this.item.meta.image}" class="object-contain"></div><div class="flex flex-col justify-between text-xs ${y({"opacity-40":this.dialog,grayscale:this.dialog})}"><div><span class="text-base">#${this.item.id}</span><p class="mb-4"><dui-link class="text-black uri" href="${this.tokenLink}" target="_blank">View on etherscan</dui-link></p></div><div><div class="status ${t}">${i}</div>${l(this.item.name,()=>s`<div class="name ${t}"><b class="text-blue-600">${this.item.name}</b>.doid</div>`)}<div class="actions mt-2">${l(this.item.name,()=>s`<dui-button ?disabled="${this.dialog}" ?pending="${this.dialog}" class="secondary" @click="${this.claim}" sm>Claim</dui-button>`,()=>s`<dui-button href="/?pid=${this.item.id}" sm>Lock a name</dui-button>`)}</div></div></div>${l(this.dialog,()=>{var a;return s`<dui-dialog @close="${()=>this.close()}"><div slot="header">Claim DOID name</div><div class="min-h-10">${l(!((a=this.tx)!=null&&a.success),()=>s`<div class="text-center">You are claiming for:<p class="text-black my-4 text-lg"><b class="text-blue-600">${this.item.name}</b>.doid</p><p>${s`(Note: This pass <b>#${this.item.id}</b> will be burned after claiming.)`}</p></div>`)} ${l(this.txPending,()=>s`<tx-state .tx="${this.tx}" .opts="${{state:{success:`Success. You are the registrant of ${this.item.name} now`}}}"><dui-button slot="view" @click="${()=>this.close(!0)}">Close</dui-button></tx-state>`,()=>s`<p class="mt-8 text-center"><dui-button class="success" @click="${this.doClaim}">Continue</dui-button></p>`)}</div></dui-dialog>`})}</div>`}};u([$({type:Object})],p.prototype,"item",2);u([d()],p.prototype,"tx",2);u([d()],p.prototype,"success",2);u([d()],p.prototype,"dialog",2);p=u([w("pass-item")],p);const G=`.passes{height:300px;height:100%;--tw-bg-opacity: 1;background-color:rgba(255,255,255,var(--tw-bg-opacity))}.pass-list{display:grid;grid-template-columns:repeat(1,minmax(0,1fr));grid-gap:1rem;gap:1rem}@media (min-width: 1024px){.pass-list{grid-template-columns:repeat(2,minmax(0,1fr))}}
`;var H=Object.defineProperty,q=Object.getOwnPropertyDescriptor,g=(t,i,a,n)=>{for(var e=n>1?void 0:n?q(i,a):i,o=t.length-1,r;o>=0;o--)(r=t[o])&&(e=(n?r(i,a,e):r(e))||e);return n&&e&&H(i,a,e),e};let h=class extends x(G){constructor(){super(...arguments),this.bindBridge=new f(this,c),this.name="",this.passes=[],this.pending=!1,this.ts=0}get bridge(){return c.bridge}async getUserPassList(){if(c.notReady)return;this.pending=!0;const{account:t}=c.bridge,i=await U();try{const a=await Y(t,!0),n=await z();let e=await Promise.all(a.map(async o=>{var O;const[r,L,k]=o,C=j(r,0),P=(O=n[L])!=null?O:[],b={id:C,cate:P[0],hash:k,meta:{}},_=await Promise.all([B(k),i.tokenURI(C)]);b.name=_[0],b.len=`${P[1]}`;try{b.meta=await(await fetch(_[1])).json()}catch(J){}return b}));this.passes=e.sort((o,r)=>o.id-r.id).sort((o,r)=>o.name?r.name?o.id-r.id:-1:1)}catch(a){console.log(a,"get passess failed"),this.passes=[]}finally{this.ts++,this.pending=!1}}get empty(){return this.ts&&!this.passes.length}connectedCallback(){super.connectedCallback(),this.getUserPassList()}render(){return s`<div class="passes py-4"><div class="lg_w-3/5 my-8 mx-3 lg_mx-auto"><section><p class="text-base mb-2">Note</p><ul class="note list-disc mx-4"><li>You can only mint one Lock Pass for one wallet address.</li><li>Once you successfully locked your name. Your name will be reserved for 7 days after the official launch(22nd Dec,2022). Those locked but unminted names will be released to the public pool afterwards.</li></ul><dui-link href="${"https://twitter.com/DoidFoundation"}" target="_blank" rel="noopener" class="inline-flex my-1 text-base">Follow DOID Twitter and stay connected</dui-link></section>${l(c.noAccount,()=>s`<div class="my-8 text-center"><connect-wallet-btn></connect-wallet-btn></div>`,()=>s`<section class="mt-6"><h2 class="my-4 text-xl">My Lock Pass</h2><div class="py-4">${l(this.empty,()=>s`No passes yet.`,()=>s`${l(this.pending,()=>s`<i class="mdi mdi-loading mr-1"></i>Loading...`,()=>s`<div class="pass-list">${I(this.passes,t=>s`<pass-item @change="${this.getUserPassList}" key="${t.id}" .item="${t}"></pass-item>`)}</div>`)}`)}</div></section><section class="mt-6"><h2 class="text-xl mb-2">Share Lock Pass Invitations</h2>${this.passes.length?s`<pass-share></pass-share>`:s``}</section>`)}</div></div>`}};g([$()],h.prototype,"name",2);g([d()],h.prototype,"passes",2);g([d()],h.prototype,"pending",2);g([d()],h.prototype,"ts",2);h=g([w("view-passes")],h);export{h as ViewPasses};
